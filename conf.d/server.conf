
    server {

        listen 80 default_server;

        server_name _;

        location / {
            root /usr/share/nginx/html;
        }

        location /manager {
           proxy_pass http://snippet-manager:8080;
           proxy_set_header Host $host;
        }

       location /runner {
          proxy_pass http://snippet-runner:8080;
          proxy_set_header Host $host;
       }

       location /share {
          proxy_pass http://snippet-share:8080;
          proxy_set_header Host $host;
       }


        # return 301 https://$host$request_uri;

        
    }

server {
        listen 443 ssl;
        # use the certificates
        ssl_certificate     /etc/letsencrypt/live/ingsisgroup6dev.gleeze.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ingsisgroup6dev.gleeze.com/privkey.pem;
        server_name ingsisgroup6dev.gleeze.com;
        root /var/www/html;
        index index.php index.html index.htm;

        location / {
            root /usr/share/nginx/html;
        }

        location /api {
            proxy_pass http://snippet-api:8080;
            proxy_set_header Host $host;
        }

        location /manager {
            proxy_pass http://snippet-manager:8080;
            proxy_set_header Host $host;
        }

        location /runner {
            proxy_pass http://snippet-runner:8080;
            proxy_set_header Host $host;
        }

        location /share {
            proxy_pass http://snippet-share:8080;
            proxy_set_header Host $host;
        }

        location ~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
}


# version: '3'
# services:
#   manager:
#     container_name: "manager-dev-env"
#     image: ghcr.io/snippet-searcher/manager:dev
#     depends_on:
#       - database
#     environment:
#       - DD_API_KEY=${DD_API_KEY}
#     labels:
#       com.datadoghq.ad.logs: '[{"source": "java", "service": "manager-api-dev", "log_processing_rules": [{"type": "multi_line", "name": "log_start_with_date", "pattern" : "\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])"}]}]'
#
#   proxy:
#     image: nginx
#     container_name: "proxy-dev-env"
#     ports:
#       - 80:80
#       - 433:433
#     depends_on:
#       - manager
#     volumes:
#       - ./conf.d:/etc/nginx/conf.d:ro
#       - ./certbot/www:/var/www/certbot/:ro
#   database:
#     container_name: "database-dev-env"
#     image: postgres:latest
#     volumes:
#       - db_data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=password
#       - POSTGRES_DB=manager #a,b,c for multiple dbs
#   datadog:
#     image: datadog/agent
#     container_name: "datadog-dev-env"
#     environment:
#       - DD_API_KEY=${DD_API_KEY}
#       - DD_SITE=datadoghq.com
#       - DD_LOGS_ENABLED=true
#       - DD_APM_ENABLED=true
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#       - /proc/:/host/proc/:ro
#       - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
#   redis:
#     container_name: "redis-dev-env"
#     image: redis:6-alpine
#   certbot:
#     container_name: "certbot-dev"
#     image: certbot/certbot:latest
#     volumes:
#       - ./certbot/www/:/var/www/certbot/:rw
# volumes:
#   db_data: